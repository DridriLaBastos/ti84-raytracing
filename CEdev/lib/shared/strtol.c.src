	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_strtol
_strtol:
	ld	hl, -26
	call	__frameset
	ld	de, (ix + 6)
	or	a, a
	sbc	hl, hl
	ld	(ix - 9), hl
	xor	a, a
	ld	(ix - 10), a
BB0_1:
	ld	(ix - 3), de
	ex	de, hl
	ld	(ix - 6), hl
	ld	a, (hl)
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	l, a
	push	hl
	call	_isspace
	pop	de
	ld	de, (ix - 3)
	inc	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB0_1
	ld	iy, (ix - 6)
	ld	a, (iy)
	cp	a, 43
	jq	nz, BB0_3
	push	de
	pop	iy
	ld	hl, -1
	ld	(ix - 16), hl
	ld	e, 127
	ld	a, 1
	ld	bc, (ix + 12)
	jq	BB0_6
BB0_3:
	ex	de, hl
	cp	a, 45
	ld	de, -1
	ld	(ix - 16), de
	ld	e, 127
	ld	a, 1
	ld	bc, (ix + 12)
	jq	nz, BB0_6
	ld	iy, 0
	ld	(ix - 16), iy
	ld	e, -128
	xor	a, a
	push	hl
	pop	iy
BB0_6:
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	(ix - 20), e
	ld	(ix - 6), a
	jq	nz, BB0_11
	ld	a, (iy)
	cp	a, 48
	jq	nz, BB0_8
	ld	a, (iy + 1)
	and	a, -33
	cp	a, 88
	ld	hl, 16
	jq	z, BB0_18
	ld	hl, 8
	jq	BB0_18
BB0_11:
	push	bc
	pop	hl
	ld	de, 16
	or	a, a
	sbc	hl, de
	jq	nz, BB0_12
	ld	a, (iy)
	cp	a, 48
	jq	nz, BB0_17
	ld	a, (iy + 1)
	cp	a, 88
	jq	z, BB0_16
	cp	a, 120
	jq	nz, BB0_17
BB0_16:
	lea	iy, iy + 2
BB0_17:
	ld	hl, 16
	jq	BB0_18
BB0_8:
	ld	hl, 10
	jq	BB0_18
BB0_12:
	push	bc
	pop	hl
BB0_18:
	ld	c, 16
	ld	(ix - 19), hl
	call	__ishl
	call	__ishrs
	ld	(ix - 13), hl
BB0_19:
	ld	(ix - 3), iy
	ld	a, (iy)
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	l, a
	push	hl
	call	_toupper
	pop	de
	ld	a, l
	cp	a, 65
	call	__setflag
	ld	a, -55
	jq	p, BB0_21
	ld	a, -48
BB0_21:
	add	a, l
	ld	bc, 0
	cp	a, 0
	call	__setflag
	ld	iy, (ix + 9)
	jq	m, BB0_22
	ld	c, a
	push	bc
	pop	hl
	ld	de, (ix - 13)
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	p, BB0_22
	ld	(ix - 23), bc
	ld	bc, (ix - 19)
	push	bc
	pop	hl
	push	bc
	pop	iy
	add	iy, iy
	sbc	hl, hl
	ld	(ix - 26), hl
	ld	hl, (ix - 9)
	ld	d, (ix - 10)
	ld	e, d
	ld	iy, (ix - 26)
	ld	a, iyl
	call	__lmulu
	xor	a, a
	ld	bc, (ix - 23)
	call	__ladd
	ld	bc, (ix - 9)
	ld	a, d
	call	__lcmpu
	call	__setflag
	ld	a, 1
	jq	p, BB0_26
	ld	a, 0
BB0_26:
	ld	iy, (ix - 3)
	inc	iy
	bit	0, a
	ld	(ix - 9), hl
	ld	(ix - 10), e
	jq	nz, BB0_19
	ld	hl, 5
	ld	(_errno), hl
	ld	bc, (ix - 16)
	ld	d, (ix - 20)
	ld	iy, (ix + 9)
	jq	BB0_28
BB0_22:
	ld	bc, (ix - 9)
	ld	d, (ix - 10)
BB0_28:
	lea	hl, iy
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	a, (ix - 6)
	jq	z, BB0_38
	ld	hl, (ix + 12)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB0_37
	ld	e, a
	ld	hl, (ix - 3)
BB0_31:
	ld	(ix - 3), hl
	ld	a, (hl)
	cp	a, 76
	jq	z, BB0_35
	cp	a, 104
	jq	z, BB0_35
	cp	a, 108
	jq	z, BB0_35
	cp	a, 117
	jq	nz, BB0_36
BB0_35:
	ld	hl, (ix - 3)
	inc	hl
	jq	BB0_31
BB0_36:
	ld	a, e
BB0_37:
	ld	hl, (ix - 3)
	ld	(iy), hl
BB0_38:
	push	bc
	pop	hl
	ld	e, d
	call	__lneg
	bit	0, a
	jq	nz, BB0_40
	push	hl
	pop	bc
BB0_40:
	bit	0, a
	jq	nz, BB0_42
	ld	d, e
BB0_42:
	push	bc
	pop	hl
	ld	e, d
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	ident	"clang version 14.0.0 (https://github.com/jacobly0/llvm-project a139def90d26173f771eb1eca797633d1fbb2797)"
	extern	__lneg
	extern	__setflag
	extern	__Unwind_SjLj_Register
	extern	__Unwind_SjLj_Unregister
	extern	_toupper
	extern	__frameset
	extern	_isspace
	extern	__lmulu
	extern	__lcmpu
	extern	_errno
	extern	__ishrs
	extern	__ishl
	extern	__ladd
