	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_qsort
_qsort:
	ld	hl, -144
	call	__frameset
	ld	hl, (ix + 9)
	ld	bc, (ix + 12)
	lea	de, ix - 102
	ld	(ix - 3), bc
	ld	bc, -144
	lea	iy, ix
	add	iy, bc
	ld	(iy), de
	dec	hl
	ld	bc, (ix - 3)
	call	__imulu
	push	hl
	pop	de
	ld	iy, (ix + 6)
	add	iy, de
	ld	de, 0
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	push	ix
	ld	bc, -141
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	(ix - 126), iy
	ld	iy, (ix + 6)
	push	de
	pop	bc
BB0_1:
	ld	de, -129
	lea	hl, ix
	add	hl, de
	ld	(hl), bc
	lea	bc, iy
	ld	de, (ix - 126)
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	ld	bc, (ix + 12)
	call	__idivu
	ld	c, 1
	call	__ishru
	ld	bc, (ix + 12)
	call	__imulu
	push	hl
	pop	bc
	lea	hl, iy
	add	hl, bc
	push	hl
	pop	bc
	ld	(ix - 3), bc
	ld	bc, -132
	lea	hl, ix
	add	hl, bc
	ld	(hl), iy
	lea	hl, iy
	push	de
	pop	iy
	ld	bc, (ix - 3)
	push	bc
	pop	de
BB0_2:
	ld	(ix - 114), iy
	push	hl
	pop	bc
	or	a, a
	sbc	hl, hl
	ld	(ix - 117), bc
	ld	(ix - 105), de
BB0_3:
	ld	(ix - 108), hl
	push	hl
	pop	iy
	push	bc
	pop	hl
	lea	bc, iy
	add	hl, bc
	push	de
	push	hl
	ld	hl, (ix + 15)
	call	__indcallhl
	pop	de
	pop	de
	ld	de, 0
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	p, BB0_4
	ld	de, (ix + 12)
	ld	hl, (ix - 108)
	add	hl, de
	ld	bc, (ix - 117)
	ld	de, (ix - 105)
	jq	BB0_3
BB0_4:
	ld	de, (ix - 108)
	ld	hl, (ix - 117)
	add	hl, de
	ld	(ix - 120), hl
	or	a, a
	sbc	hl, hl
BB0_8:
	push	hl
	pop	de
	ld	hl, (ix - 114)
	ld	(ix - 111), de
	add	hl, de
	ld	(ix - 123), hl
	push	hl
	ld	hl, (ix - 105)
	push	hl
	ld	hl, (ix + 15)
	call	__indcallhl
	pop	de
	pop	de
	ld	de, 0
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	p, BB0_9
	ld	hl, (ix - 111)
	ld	de, (ix + 12)
	or	a, a
	sbc	hl, de
	jq	BB0_8
BB0_9:
	ld	bc, (ix - 123)
	ld	de, (ix - 120)
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jq	nc, BB0_10
	ld	hl, (ix + 12)
	ld	(ix - 3), de
	ld	de, -138
	lea	iy, ix
	add	iy, de
	ld	(iy), bc
	ld	(ix - 123), bc
	ld	de, (ix - 3)
	push	de
	pop	iy
	ld	de, (ix - 105)
BB0_12:
	push	hl
	pop	bc
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB0_14
	ld	a, (iy)
	ld	de, -135
	lea	hl, ix
	add	hl, de
	ld	(hl), iy
	ld	hl, (ix - 123)
	ld	e, (hl)
	ld	(ix - 3), bc
	ld	bc, -135
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	ld	(iy), e
	ld	de, (ix - 105)
	ld	(hl), a
	inc	hl
	ld	(ix - 123), hl
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	inc	iy
	ld	bc, (ix - 3)
	push	bc
	pop	hl
	dec	hl
	jq	BB0_12
BB0_10:
	ld	hl, (ix - 105)
	ld	(ix - 123), hl
	ld	iy, 0
	jq	BB0_18
BB0_14:
	push	de
	pop	bc
	ld	de, (ix - 120)
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	ld	(ix - 3), de
	ld	de, -138
	lea	hl, ix
	push	af
	add	hl, de
	pop	af
	ld	bc, (hl)
	ld	(ix - 123), bc
	ld	iy, 0
	ld	de, (ix - 3)
	jq	z, BB0_18
	push	bc
	pop	hl
	ld	de, (ix - 105)
	or	a, a
	sbc	hl, de
	ld	de, (ix - 120)
	ld	(ix - 123), de
	jq	z, BB0_17
	ld	de, (ix - 105)
	ld	(ix - 123), de
BB0_17:
	ld	de, (ix - 120)
BB0_18:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	ld	a, 1
	jq	c, BB0_20
	ld	a, 0
BB0_20:
	bit	0, a
	lea	bc, iy
	ld	de, (ix - 108)
	jq	nz, BB0_22
	ld	bc, (ix + 12)
BB0_22:
	ld	hl, (ix - 117)
	ld	(ix - 120), bc
	add	hl, bc
	ld	(ix - 105), hl
	add	hl, de
	push	hl
	pop	bc
	bit	0, a
	lea	de, iy
	jq	nz, BB0_24
	ld	(ix - 3), bc
	ld	bc, -141
	lea	hl, ix
	add	hl, bc
	ld	de, (hl)
	ld	bc, (ix - 3)
BB0_24:
	ld	iy, (ix - 114)
	ld	(ix - 3), bc
	ld	bc, -138
	lea	hl, ix
	add	hl, bc
	ld	(hl), de
	add	iy, de
	push	ix
	ld	bc, -135
	add	ix, bc
	ld	(ix), iy
	pop	ix
	ld	de, (ix - 111)
	add	iy, de
	lea	hl, iy
	ld	bc, (ix - 3)
	or	a, a
	sbc	hl, bc
	push	bc
	pop	hl
	ld	de, (ix - 123)
	jq	nc, BB0_2
	ld	de, -132
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld	iy, -1
	lea	bc, iy
	call	__imulu
	push	hl
	pop	bc
	ld	iy, (ix - 114)
	add	iy, bc
	push	ix
	ld	bc, -138
	add	ix, bc
	ld	de, (ix)
	pop	ix
	add	iy, de
	ld	de, (ix - 111)
	add	iy, de
	ld	hl, (ix - 120)
	ld	bc, -1
	call	__imulu
	push	hl
	pop	bc
	ld	hl, (ix - 126)
	ld	de, (ix - 117)
	or	a, a
	sbc	hl, de
	push	hl
	pop	de
	push	bc
	pop	hl
	add	hl, de
	ld	de, (ix - 108)
	or	a, a
	sbc	hl, de
	push	hl
	pop	bc
	ld	hl, (ix - 105)
	add	hl, de
	ld	(ix - 105), hl
	ld	de, -135
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld	de, (ix - 111)
	add	hl, de
	ld	(ix - 108), hl
	lea	hl, iy
	or	a, a
	sbc	hl, bc
	call	__setflag
	jq	p, BB0_27
	ld	de, (ix - 105)
	push	de
	pop	hl
	ld	bc, (ix - 126)
	or	a, a
	sbc	hl, bc
	ld	(ix - 111), de
	ld	de, -129
	lea	hl, ix
	push	af
	add	hl, de
	pop	af
	ld	hl, (hl)
	ld	de, (ix - 108)
	jq	c, BB0_28
	jq	BB0_29
BB0_27:
	ld	de, -132
	lea	hl, ix
	add	hl, de
	ld	bc, (hl)
	push	bc
	pop	hl
	ld	de, (ix - 108)
	or	a, a
	sbc	hl, de
	ld	(ix - 111), bc
	push	de
	pop	bc
	ld	iy, (ix - 105)
	ld	de, -132
	lea	hl, ix
	push	af
	add	hl, de
	pop	af
	ld	(hl), iy
	ld	de, (ix - 126)
	ld	(ix - 3), bc
	push	ix
	ld	bc, -129
	push	af
	add	ix, bc
	pop	af
	ld	hl, (ix)
	pop	ix
	ld	bc, (ix - 3)
	jq	nc, BB0_30
BB0_28:
	ld	(ix - 105), bc
	ld	bc, 6
	call	__imulu
	push	hl
	pop	bc
	ld	(ix - 3), de
	ld	de, -144
	lea	iy, ix
	add	iy, de
	ld	iy, (iy)
	add	iy, bc
	ld	hl, (ix - 111)
	ld	(iy), hl
	ld	hl, (ix - 105)
	ld	(iy + 3), hl
	ld	bc, -129
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	inc	hl
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	de, (ix - 3)
BB0_29:
	ld	(ix - 126), de
	ld	bc, -132
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
BB0_30:
	lea	hl, iy
	ld	bc, (ix - 126)
	or	a, a
	sbc	hl, bc
	ld	de, -129
	lea	hl, ix
	push	af
	add	hl, de
	pop	af
	ld	bc, (hl)
	jq	c, BB0_1
	push	bc
	pop	hl
	ld	de, 1
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	m, BB0_33
	dec	bc
	push	bc
	pop	hl
	push	bc
	pop	de
	ld	bc, 6
	call	__imulu
	push	de
	pop	bc
	push	hl
	pop	de
	ld	(ix - 3), bc
	ld	bc, -144
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	add	iy, de
	ld	de, (iy)
	ld	hl, (iy + 3)
	ld	(ix - 126), hl
	push	de
	pop	iy
	ld	bc, (ix - 3)
	jq	BB0_1
BB0_33:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	ident	"clang version 14.0.0 (https://github.com/jacobly0/llvm-project a139def90d26173f771eb1eca797633d1fbb2797)"
	extern	__idivu
	extern	__setflag
	extern	__Unwind_SjLj_Register
	extern	__Unwind_SjLj_Unregister
	extern	__frameset
	extern	__indcallhl
	extern	__imulu
	extern	__ishru
